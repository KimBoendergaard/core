## OE-lite class for handling runit services
##
## This class handles runit services. If having a recipe with a runit service,
## place that script in ${SRCDIR}, and make sure that the necessary useflags
## is setup. The necessary use flags are:
## <chosen name>_runit (declare this to RECIPE_FLAGS, and set to true)
## <chosen name> (declare this to RECIPE_FLAGS and set to true)
## the needed variables are:
## RUNIT_NAME_<chosen name> Set this to the service name.
## RUNIT_SCRIPT_<chosen name> Set this to the filename of the service.
##
## @useflag runit Enable or disable runit. Disabled by default.
##
## @var RDEPENDS_RUNIT Set the rdependency of runit. Default set to runit.

CLASS_FLAGS += "runit"

RDEPENDS_RUNIT ?= "runit"
RDEPENDS_${PN}:>USE_runit = " ${RDEPENDS_RUNIT}"

DO_INSTALL_RUNIT = ""
DO_INSTALL_RUNIT:USE_runit = "do_install_runit"
do_install[postfuncs] += "${DO_INSTALL_RUNIT}"
python do_install_runit () {
    import stat
    path = d.get("D")
    os.chdir(path)

    options = ((d.get("RECIPE_FLAGS") or "").split() +
               (d.get("CLASS_FLAGS") or "").split())
    runitservicedir = d.get('runitservicedir')
    srcdir = d.get('SRCDIR')

    for option in options:

        if not option.endswith('_runit'):
            continue
        
        enable = d.get("USE_"+option)
        if not enable:
            continue

	name = option[0:-len('_runit')]
        svname = d.get('RUNIT_NAME_'+name)
        if not svname:
            svname = name.replace('_', '-')

        script = d.get('RUNIT_SCRIPT_'+name)
        if not script:
            script = srcdir + '/' + svname + '.runit'

        dst_dir = '.%s/%s'%(runitservicedir, svname)
	dst = dst_dir + '/run'

        if not os.path.exists(script):
            bb.note('runit script not found: %s'%script)
            continue

        if not os.path.exists(dst_dir):
            os.makedirs(dst_dir)
        shutil.copy(script, dst)
	os.chmod(dst, stat.S_IRWXU|stat.S_IRGRP|stat.S_IXGRP|stat.S_IROTH|stat.S_IXOTH)

        down = d.get('USE_%s_down'%(option))
        if down:
            open(os.path.join(dst_dir, 'down'), 'w').close()
}

# Local Variables:
# mode: python
# End:
